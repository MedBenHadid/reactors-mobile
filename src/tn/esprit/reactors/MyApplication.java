package tn.esprit.reactors;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.FontImage;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.plaf.Style;
import java.io.IOException;
import tn.esprit.reactors.chihab.controllers.MembershipController;
import tn.esprit.reactors.chihab.forms.AssociationHomeForm;
import tn.esprit.reactors.malek.services.UserService;
import tn.esprit.reactors.mission.forms.ListMissionForm;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

     
    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }

    public void start() {
        final Style sTitleCommand = UIManager.getInstance().getComponentStyle("TitleCommand");
        final FontImage iconx = FontImage.createMaterial(FontImage.MATERIAL_ARROW_BACK, sTitleCommand);
        UserService.getInstance();
        MembershipController.getInstance();
        Form associations = new Form(new FlowLayout(CENTER,CENTER));   
        Form F2 = new Form(new FlowLayout(CENTER,CENTER));   
        Form F3 = new Form(new FlowLayout(CENTER,CENTER));  
        Form Home = new Form();
        Toolbar tb = Home.getToolbar(); 
        Form mission = new Form(new FlowLayout(CENTER,CENTER));
        mission.add(new Label("Mission"));
        mission.getToolbar().addCommandToLeftBar("back", iconx, (ActionListener) (ActionEvent evt) -> {
            Home.showBack();
        });
        
        tb.addMaterialCommandToLeftSideMenu("Mission",FontImage.MATERIAL_WEB, new ActionListener() {
           @Override
           public void actionPerformed(ActionEvent evt) {
              
               try {
                   ListMissionForm.getInstance(current).showBack();
               } catch (IOException ex) {
                   Log.p("Error", 1);
               }
            
           }
       });

        
        
        associations.add(new Label("Associations"));
        F2.add(new Label("Settings"));
        F3.add(new Label("About"));
        F2.getToolbar().addCommandToLeftBar("back", iconx, (ActionListener) (ActionEvent evt) -> {
            Home.showBack();
        });
        F3.getToolbar().addCommandToLeftBar("back", iconx, (ActionListener) (ActionEvent evt) -> {
            Home.showBack();
        });
        tb.addMaterialCommandToLeftSideMenu("Associations",FontImage.MATERIAL_PEOPLE_OUTLINE, (ActionListener) (ActionEvent evt) -> {
            AssociationHomeForm.getInstance(Home).showBack();
        });
       
       
       
       
        tb.addMaterialCommandToLeftSideMenu("Settings",FontImage.MATERIAL_SETTINGS, (ActionListener) (ActionEvent evt) -> {
            F2.show();
        });
        tb.addMaterialCommandToLeftSideMenu("About",FontImage.MATERIAL_INFO, (ActionListener) (ActionEvent evt) -> {
            F3.show();
        });
        
        // TODO : timer to update the 
        int numberOfNotifications = 99;
        Home.getToolbar().addMaterialCommandToRightBar(String.valueOf(numberOfNotifications), FontImage.MATERIAL_NOTIFICATIONS, ev->{

        });

        if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("Hi World", BoxLayout.y());
        hi.add(new Label("Hi World"));
        Home.show();
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
